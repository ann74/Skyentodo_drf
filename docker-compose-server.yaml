version: "3.9"

volumes:
  postgres:

networks:
  back:
  front:

services:
  postgres:
    image: postgres:14.6-alpine
    ports:
      - 5432:5432
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - back

  migrations:
    image: ann74/skyentodo
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "python manage.py migrate --noinput"
    networks:
      - back

  api:
    image: ann74/skyentodo
    restart: always
    env_file:
      - ./.env
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    networks:
      - back
      - front

  front:
    image: sermalenk/skypro-front:lesson-35
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - back
      - front
